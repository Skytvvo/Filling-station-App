<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FogOilDataSet" targetNamespace="http://tempuri.org/FogOilDataSet.xsd" xmlns:mstns="http://tempuri.org/FogOilDataSet.xsd" xmlns="http://tempuri.org/FogOilDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="FogOilConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="FogOilConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FogOilAssistant.Properties.Settings.GlobalReference.Default.FogOilConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarBrandsTableAdapter" GeneratorDataComponentClassName="CarBrandsTableAdapter" Name="CarBrands" UserDataComponentName="CarBrandsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FogOilConnectionString (Settings)" DbObjectName="FogOil.dbo.CarBrands" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CarBrands] WHERE (([BrandId] = @Original_BrandId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrandId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CarBrands] ([Name]) VALUES (@Name);
SELECT BrandId, Name FROM CarBrands WHERE (BrandId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BrandId, Name FROM dbo.CarBrands</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CarBrands] SET [Name] = @Name WHERE (([BrandId] = @Original_BrandId) AND ([Name] = @Original_Name));
SELECT BrandId, Name FROM CarBrands WHERE (BrandId = @BrandId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BrandId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BrandId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BrandId" ColumnName="BrandId" DataSourceName="FogOil.dbo.CarBrands" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BrandId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BrandId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BrandId" DataSetColumn="BrandId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarModelsTableAdapter" GeneratorDataComponentClassName="CarModelsTableAdapter" Name="CarModels" UserDataComponentName="CarModelsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FogOilConnectionString (Settings)" DbObjectName="FogOil.dbo.CarModels" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CarModels] WHERE (([ModelId] = @Original_ModelId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CarModels] ([Name]) VALUES (@Name);
SELECT ModelId, Name FROM CarModels WHERE (ModelId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ModelId, Name FROM dbo.CarModels</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CarModels] SET [Name] = @Name WHERE (([ModelId] = @Original_ModelId) AND ([Name] = @Original_Name));
SELECT ModelId, Name FROM CarModels WHERE (ModelId = @ModelId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModelId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ModelId" ColumnName="ModelId" DataSourceName="FogOil.dbo.CarModels" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ModelId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ModelId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ModelId" DataSetColumn="ModelId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarObjectsTableAdapter" GeneratorDataComponentClassName="CarObjectsTableAdapter" Name="CarObjects" UserDataComponentName="CarObjectsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FogOilConnectionString (Settings)" DbObjectName="FogOil.dbo.CarObjects" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CarObjects] WHERE (([CarId] = @Original_CarId) AND ([CarType] = @Original_CarType) AND ([CarModel] = @Original_CarModel) AND ([CarProduct] = @Original_CarProduct) AND ([CarBrand] = @Original_CarBrand))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarModel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarModel" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarProduct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarProduct" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarBrand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarBrand" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CarObjects] ([CarType], [CarModel], [CarProduct], [CarBrand]) VALUES (@CarType, @CarModel, @CarProduct, @CarBrand);
SELECT CarId, CarType, CarModel, CarProduct, CarBrand FROM CarObjects WHERE (CarId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarModel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarModel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarProduct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarProduct" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarBrand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarBrand" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CarId, CarType, CarModel, CarProduct, CarBrand FROM dbo.CarObjects</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CarObjects] SET [CarType] = @CarType, [CarModel] = @CarModel, [CarProduct] = @CarProduct, [CarBrand] = @CarBrand WHERE (([CarId] = @Original_CarId) AND ([CarType] = @Original_CarType) AND ([CarModel] = @Original_CarModel) AND ([CarProduct] = @Original_CarProduct) AND ([CarBrand] = @Original_CarBrand));
SELECT CarId, CarType, CarModel, CarProduct, CarBrand FROM CarObjects WHERE (CarId = @CarId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarModel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarModel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarProduct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarProduct" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CarBrand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarBrand" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarType" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarType" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarModel" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarModel" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarProduct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarProduct" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CarBrand" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CarBrand" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CarId" ColumnName="CarId" DataSourceName="FogOil.dbo.CarObjects" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CarId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CarId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CarId" DataSetColumn="CarId" />
              <Mapping SourceColumn="CarType" DataSetColumn="CarType" />
              <Mapping SourceColumn="CarModel" DataSetColumn="CarModel" />
              <Mapping SourceColumn="CarProduct" DataSetColumn="CarProduct" />
              <Mapping SourceColumn="CarBrand" DataSetColumn="CarBrand" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarProductsTableAdapter" GeneratorDataComponentClassName="CarProductsTableAdapter" Name="CarProducts" UserDataComponentName="CarProductsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FogOilConnectionString (Settings)" DbObjectName="FogOil.dbo.CarProducts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CarProducts] ([Product], [Car]) VALUES (@Product, @Car)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Product" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Product" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Car" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Car" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Product, Car FROM dbo.CarProducts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Product" DataSetColumn="Product" />
              <Mapping SourceColumn="Car" DataSetColumn="Car" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CarTypesTableAdapter" GeneratorDataComponentClassName="CarTypesTableAdapter" Name="CarTypes" UserDataComponentName="CarTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FogOilConnectionString (Settings)" DbObjectName="FogOil.dbo.CarTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CarTypes] WHERE (([TypeId] = @Original_TypeId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CarTypes] ([Name]) VALUES (@Name);
SELECT TypeId, Name FROM CarTypes WHERE (TypeId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TypeId, Name FROM dbo.CarTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CarTypes] SET [Name] = @Name WHERE (([TypeId] = @Original_TypeId) AND ([Name] = @Original_Name));
SELECT TypeId, Name FROM CarTypes WHERE (TypeId = @TypeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TypeId" ColumnName="TypeId" DataSourceName="FogOil.dbo.CarTypes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TypeId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TypeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TypeId" DataSetColumn="TypeId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProductsTableAdapter" GeneratorDataComponentClassName="ProductsTableAdapter" Name="Products" UserDataComponentName="ProductsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FogOilConnectionString (Settings)" DbObjectName="FogOil.dbo.Products" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Products] WHERE (([ProductId] = @Original_ProductId) AND ([Name] = @Original_Name) AND ([Price] = @Original_Price) AND ([Description] = @Original_Description) AND ([Img] = @Original_Img))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Img" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Img" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Products] ([Name], [Price], [Description], [Img]) VALUES (@Name, @Price, @Description, @Img);
SELECT ProductId, Name, Price, Description, Img FROM Products WHERE (ProductId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Img" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Img" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProductId, Name, Price, Description, Img FROM dbo.Products</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Products] SET [Name] = @Name, [Price] = @Price, [Description] = @Description, [Img] = @Img WHERE (([ProductId] = @Original_ProductId) AND ([Name] = @Original_Name) AND ([Price] = @Original_Price) AND ([Description] = @Original_Description) AND ([Img] = @Original_Img));
SELECT ProductId, Name, Price, Description, Img FROM Products WHERE (ProductId = @ProductId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Img" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Img" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Img" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Img" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ProductId" ColumnName="ProductId" DataSourceName="FogOil.dbo.Products" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ProductId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ProductId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProductId" DataSetColumn="ProductId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="Img" DataSetColumn="Img" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FogOilDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="FogOilDataSet" msprop:Generator_UserDSName="FogOilDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CarBrands" msprop:Generator_TableClassName="CarBrandsDataTable" msprop:Generator_TableVarName="tableCarBrands" msprop:Generator_TablePropName="CarBrands" msprop:Generator_RowDeletingName="CarBrandsRowDeleting" msprop:Generator_RowChangingName="CarBrandsRowChanging" msprop:Generator_RowEvHandlerName="CarBrandsRowChangeEventHandler" msprop:Generator_RowDeletedName="CarBrandsRowDeleted" msprop:Generator_UserTableName="CarBrands" msprop:Generator_RowChangedName="CarBrandsRowChanged" msprop:Generator_RowEvArgName="CarBrandsRowChangeEvent" msprop:Generator_RowClassName="CarBrandsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BrandId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnBrandId" msprop:Generator_ColumnPropNameInRow="BrandId" msprop:Generator_ColumnPropNameInTable="BrandIdColumn" msprop:Generator_UserColumnName="BrandId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CarModels" msprop:Generator_TableClassName="CarModelsDataTable" msprop:Generator_TableVarName="tableCarModels" msprop:Generator_TablePropName="CarModels" msprop:Generator_RowDeletingName="CarModelsRowDeleting" msprop:Generator_RowChangingName="CarModelsRowChanging" msprop:Generator_RowEvHandlerName="CarModelsRowChangeEventHandler" msprop:Generator_RowDeletedName="CarModelsRowDeleted" msprop:Generator_UserTableName="CarModels" msprop:Generator_RowChangedName="CarModelsRowChanged" msprop:Generator_RowEvArgName="CarModelsRowChangeEvent" msprop:Generator_RowClassName="CarModelsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ModelId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnModelId" msprop:Generator_ColumnPropNameInRow="ModelId" msprop:Generator_ColumnPropNameInTable="ModelIdColumn" msprop:Generator_UserColumnName="ModelId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CarObjects" msprop:Generator_TableClassName="CarObjectsDataTable" msprop:Generator_TableVarName="tableCarObjects" msprop:Generator_TablePropName="CarObjects" msprop:Generator_RowDeletingName="CarObjectsRowDeleting" msprop:Generator_RowChangingName="CarObjectsRowChanging" msprop:Generator_RowEvHandlerName="CarObjectsRowChangeEventHandler" msprop:Generator_RowDeletedName="CarObjectsRowDeleted" msprop:Generator_UserTableName="CarObjects" msprop:Generator_RowChangedName="CarObjectsRowChanged" msprop:Generator_RowEvArgName="CarObjectsRowChangeEvent" msprop:Generator_RowClassName="CarObjectsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CarId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCarId" msprop:Generator_ColumnPropNameInRow="CarId" msprop:Generator_ColumnPropNameInTable="CarIdColumn" msprop:Generator_UserColumnName="CarId" type="xs:int" />
              <xs:element name="CarType" msprop:Generator_ColumnVarNameInTable="columnCarType" msprop:Generator_ColumnPropNameInRow="CarType" msprop:Generator_ColumnPropNameInTable="CarTypeColumn" msprop:Generator_UserColumnName="CarType" type="xs:int" />
              <xs:element name="CarModel" msprop:Generator_ColumnVarNameInTable="columnCarModel" msprop:Generator_ColumnPropNameInRow="CarModel" msprop:Generator_ColumnPropNameInTable="CarModelColumn" msprop:Generator_UserColumnName="CarModel" type="xs:int" />
              <xs:element name="CarProduct" msprop:Generator_ColumnVarNameInTable="columnCarProduct" msprop:Generator_ColumnPropNameInRow="CarProduct" msprop:Generator_ColumnPropNameInTable="CarProductColumn" msprop:Generator_UserColumnName="CarProduct" type="xs:int" />
              <xs:element name="CarBrand" msprop:Generator_ColumnVarNameInTable="columnCarBrand" msprop:Generator_ColumnPropNameInRow="CarBrand" msprop:Generator_ColumnPropNameInTable="CarBrandColumn" msprop:Generator_UserColumnName="CarBrand" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CarProducts" msprop:Generator_TableClassName="CarProductsDataTable" msprop:Generator_TableVarName="tableCarProducts" msprop:Generator_TablePropName="CarProducts" msprop:Generator_RowDeletingName="CarProductsRowDeleting" msprop:Generator_RowChangingName="CarProductsRowChanging" msprop:Generator_RowEvHandlerName="CarProductsRowChangeEventHandler" msprop:Generator_RowDeletedName="CarProductsRowDeleted" msprop:Generator_UserTableName="CarProducts" msprop:Generator_RowChangedName="CarProductsRowChanged" msprop:Generator_RowEvArgName="CarProductsRowChangeEvent" msprop:Generator_RowClassName="CarProductsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Product" msprop:Generator_ColumnVarNameInTable="columnProduct" msprop:Generator_ColumnPropNameInRow="Product" msprop:Generator_ColumnPropNameInTable="ProductColumn" msprop:Generator_UserColumnName="Product" type="xs:int" />
              <xs:element name="Car" msprop:Generator_ColumnVarNameInTable="columnCar" msprop:Generator_ColumnPropNameInRow="Car" msprop:Generator_ColumnPropNameInTable="CarColumn" msprop:Generator_UserColumnName="Car" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CarTypes" msprop:Generator_TableClassName="CarTypesDataTable" msprop:Generator_TableVarName="tableCarTypes" msprop:Generator_TablePropName="CarTypes" msprop:Generator_RowDeletingName="CarTypesRowDeleting" msprop:Generator_RowChangingName="CarTypesRowChanging" msprop:Generator_RowEvHandlerName="CarTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="CarTypesRowDeleted" msprop:Generator_UserTableName="CarTypes" msprop:Generator_RowChangedName="CarTypesRowChanged" msprop:Generator_RowEvArgName="CarTypesRowChangeEvent" msprop:Generator_RowClassName="CarTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTypeId" msprop:Generator_ColumnPropNameInRow="TypeId" msprop:Generator_ColumnPropNameInTable="TypeIdColumn" msprop:Generator_UserColumnName="TypeId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Products" msprop:Generator_TableClassName="ProductsDataTable" msprop:Generator_TableVarName="tableProducts" msprop:Generator_TablePropName="Products" msprop:Generator_RowDeletingName="ProductsRowDeleting" msprop:Generator_RowChangingName="ProductsRowChanging" msprop:Generator_RowEvHandlerName="ProductsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProductsRowDeleted" msprop:Generator_UserTableName="Products" msprop:Generator_RowChangedName="ProductsRowChanged" msprop:Generator_RowEvArgName="ProductsRowChangeEvent" msprop:Generator_RowClassName="ProductsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProductId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnProductId" msprop:Generator_ColumnPropNameInRow="ProductId" msprop:Generator_ColumnPropNameInTable="ProductIdColumn" msprop:Generator_UserColumnName="ProductId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Img" msprop:Generator_ColumnVarNameInTable="columnImg" msprop:Generator_ColumnPropNameInRow="Img" msprop:Generator_ColumnPropNameInTable="ImgColumn" msprop:Generator_UserColumnName="Img">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CarBrands" />
      <xs:field xpath="mstns:BrandId" />
    </xs:unique>
    <xs:unique name="CarModels_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CarModels" />
      <xs:field xpath="mstns:ModelId" />
    </xs:unique>
    <xs:unique name="CarObjects_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CarObjects" />
      <xs:field xpath="mstns:CarId" />
    </xs:unique>
    <xs:unique name="CarTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CarTypes" />
      <xs:field xpath="mstns:TypeId" />
    </xs:unique>
    <xs:unique name="Products_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Products" />
      <xs:field xpath="mstns:ProductId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_CarObjects_CarBrands" msdata:parent="CarBrands" msdata:child="CarObjects" msdata:parentkey="BrandId" msdata:childkey="CarBrand" msprop:Generator_UserChildTable="CarObjects" msprop:Generator_ChildPropName="GetCarObjectsRows" msprop:Generator_UserRelationName="FK_CarObjects_CarBrands" msprop:Generator_ParentPropName="CarBrandsRow" msprop:Generator_RelationVarName="relationFK_CarObjects_CarBrands" msprop:Generator_UserParentTable="CarBrands" />
      <msdata:Relationship name="FK_CarObjects_CarModels" msdata:parent="CarModels" msdata:child="CarObjects" msdata:parentkey="ModelId" msdata:childkey="CarModel" msprop:Generator_UserChildTable="CarObjects" msprop:Generator_ChildPropName="GetCarObjectsRows" msprop:Generator_UserRelationName="FK_CarObjects_CarModels" msprop:Generator_ParentPropName="CarModelsRow" msprop:Generator_RelationVarName="relationFK_CarObjects_CarModels" msprop:Generator_UserParentTable="CarModels" />
      <msdata:Relationship name="FK_CarObjects_CarTypes" msdata:parent="CarTypes" msdata:child="CarObjects" msdata:parentkey="TypeId" msdata:childkey="CarType" msprop:Generator_UserChildTable="CarObjects" msprop:Generator_ChildPropName="GetCarObjectsRows" msprop:Generator_UserRelationName="FK_CarObjects_CarTypes" msprop:Generator_RelationVarName="relationFK_CarObjects_CarTypes" msprop:Generator_UserParentTable="CarTypes" msprop:Generator_ParentPropName="CarTypesRow" />
      <msdata:Relationship name="FK_CarProducts_CarObjects" msdata:parent="CarObjects" msdata:child="CarProducts" msdata:parentkey="CarId" msdata:childkey="Car" msprop:Generator_UserChildTable="CarProducts" msprop:Generator_ChildPropName="GetCarProductsRows" msprop:Generator_UserRelationName="FK_CarProducts_CarObjects" msprop:Generator_ParentPropName="CarObjectsRow" msprop:Generator_RelationVarName="relationFK_CarProducts_CarObjects" msprop:Generator_UserParentTable="CarObjects" />
      <msdata:Relationship name="FK_CarProducts_Products" msdata:parent="Products" msdata:child="CarProducts" msdata:parentkey="ProductId" msdata:childkey="Product" msprop:Generator_UserChildTable="CarProducts" msprop:Generator_ChildPropName="GetCarProductsRows" msprop:Generator_UserRelationName="FK_CarProducts_Products" msprop:Generator_RelationVarName="relationFK_CarProducts_Products" msprop:Generator_UserParentTable="Products" msprop:Generator_ParentPropName="ProductsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>